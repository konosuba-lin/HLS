// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_interfaces_axi_interfaces,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.872000,HLS_SYN_LAT=35,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=233,HLS_SYN_LUT=502,HLS_VERSION=2022_1}" *)

module axi_interfaces (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_TREADY,
        d_i_TVALID,
        d_o_TDATA,
        d_o_TVALID,
        d_i_TDATA,
        d_i_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   d_o_TREADY;
input   d_i_TVALID;
output  [15:0] d_o_TDATA;
output   d_o_TVALID;
input  [15:0] d_i_TDATA;
output   d_i_TREADY;

reg ap_idle;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] tmp_reg_285;
wire    regslice_both_d_o_U_apdone_blk;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage3_subdone;
reg   [2:0] acc_address0;
reg    acc_ce0;
reg    acc_we0;
reg   [31:0] acc_d0;
wire   [31:0] acc_q0;
reg   [2:0] acc_address1;
reg    acc_ce1;
reg    acc_we1;
reg   [31:0] acc_d1;
wire   [31:0] acc_q1;
reg    d_o_TDATA_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage0;
reg    d_i_TDATA_blk_n;
wire   [0:0] tmp_fu_136_p3;
reg  signed [15:0] reg_116;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] reg_120;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] reg_124;
wire   [2:0] rem_fu_144_p1;
reg   [2:0] rem_reg_289;
reg   [2:0] acc_addr_reg_295;
reg   [2:0] acc_addr_1_reg_300;
wire   [15:0] add_ln67_fu_179_p2;
reg  signed [15:0] d_i_read_1_reg_310;
wire   [15:0] trunc_ln66_1_fu_186_p1;
reg   [15:0] trunc_ln66_1_reg_316;
reg   [2:0] acc_addr_2_reg_321;
reg   [2:0] acc_addr_3_reg_326;
wire   [15:0] add_ln67_1_fu_231_p2;
wire   [15:0] trunc_ln66_2_fu_236_p1;
reg   [15:0] trunc_ln66_2_reg_336;
wire   [15:0] trunc_ln66_3_fu_240_p1;
reg   [15:0] trunc_ln66_3_reg_341;
wire   [15:0] add_ln67_2_fu_255_p2;
wire   [15:0] add_ln67_3_fu_272_p2;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln66_fu_148_p1;
wire   [63:0] zext_ln66_1_fu_159_p1;
wire   [63:0] zext_ln66_2_fu_195_p1;
wire   [63:0] zext_ln66_3_fu_205_p1;
reg   [5:0] i_fu_58;
wire   [5:0] add_ln64_fu_164_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_1;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] add_ln66_fu_214_p2;
wire   [31:0] add_ln66_1_fu_224_p2;
wire   [31:0] add_ln66_2_fu_248_p2;
wire   [31:0] add_ln66_3_fu_265_p2;
wire   [2:0] rem_1_fu_153_p2;
wire   [15:0] trunc_ln66_fu_175_p1;
wire   [2:0] rem_2_fu_190_p2;
wire   [2:0] rem_3_fu_200_p2;
wire  signed [31:0] sext_ln66_fu_210_p1;
wire  signed [31:0] sext_ln66_1_fu_221_p1;
wire  signed [31:0] sext_ln66_2_fu_244_p1;
wire  signed [15:0] sext_ln66_3_fu_261_p0;
wire  signed [31:0] sext_ln66_3_fu_261_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg   [15:0] d_o_TDATA_int_regslice;
reg    d_o_TVALID_int_regslice;
wire    d_o_TREADY_int_regslice;
wire    regslice_both_d_o_U_vld_out;
wire    regslice_both_d_i_U_apdone_blk;
wire   [15:0] d_i_TDATA_int_regslice;
wire    d_i_TVALID_int_regslice;
reg    d_i_TREADY_int_regslice;
wire    regslice_both_d_i_U_ack_in;
reg    ap_condition_167;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

axi_interfaces_acc_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
acc_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(acc_address0),
    .ce0(acc_ce0),
    .we0(acc_we0),
    .d0(acc_d0),
    .q0(acc_q0),
    .address1(acc_address1),
    .ce1(acc_ce1),
    .we1(acc_we1),
    .d1(acc_d1),
    .q1(acc_q1)
);

axi_interfaces_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_TDATA_int_regslice),
    .vld_in(d_o_TVALID_int_regslice),
    .ack_in(d_o_TREADY_int_regslice),
    .data_out(d_o_TDATA),
    .vld_out(regslice_both_d_o_U_vld_out),
    .ack_out(d_o_TREADY),
    .apdone_blk(regslice_both_d_o_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_TDATA),
    .vld_in(d_i_TVALID),
    .ack_in(regslice_both_d_i_U_ack_in),
    .data_out(d_i_TDATA_int_regslice),
    .vld_out(d_i_TVALID_int_regslice),
    .ack_out(d_i_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_167)) begin
        if ((tmp_fu_136_p3 == 1'd0)) begin
            i_fu_58 <= add_ln64_fu_164_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_58 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_136_p3 == 1'd0))) begin
        acc_addr_1_reg_300[2 : 1] <= zext_ln66_1_fu_159_p1[2 : 1];
        acc_addr_reg_295 <= zext_ln66_fu_148_p1;
        rem_reg_289 <= rem_fu_144_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_285 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_addr_2_reg_321[0] <= zext_ln66_2_fu_195_p1[0];
acc_addr_2_reg_321[2] <= zext_ln66_2_fu_195_p1[2];
        acc_addr_3_reg_326[2] <= zext_ln66_3_fu_205_p1[2];
        trunc_ln66_1_reg_316 <= trunc_ln66_1_fu_186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d_i_read_1_reg_310 <= d_i_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_136_p3 == 1'd0)))) begin
        reg_116 <= d_i_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_120 <= acc_q1;
        reg_124 <= acc_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_285 <= ap_sig_allocacmp_i_1[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln66_2_reg_336 <= trunc_ln66_2_fu_236_p1;
        trunc_ln66_3_reg_341 <= trunc_ln66_3_fu_240_p1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            acc_address0 = acc_addr_3_reg_326;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            acc_address0 = acc_addr_1_reg_300;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            acc_address0 = zext_ln66_3_fu_205_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            acc_address0 = zext_ln66_1_fu_159_p1;
        end else begin
            acc_address0 = 'bx;
        end
    end else begin
        acc_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            acc_address1 = acc_addr_2_reg_321;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            acc_address1 = acc_addr_reg_295;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            acc_address1 = zext_ln66_2_fu_195_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            acc_address1 = zext_ln66_fu_148_p1;
        end else begin
            acc_address1 = 'bx;
        end
    end else begin
        acc_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        acc_ce0 = 1'b1;
    end else begin
        acc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        acc_ce1 = 1'b1;
    end else begin
        acc_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            acc_d0 = add_ln66_3_fu_265_p2;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            acc_d0 = add_ln66_1_fu_224_p2;
        end else begin
            acc_d0 = 'bx;
        end
    end else begin
        acc_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            acc_d1 = add_ln66_2_fu_248_p2;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            acc_d1 = add_ln66_fu_214_p2;
        end else begin
            acc_d1 = 'bx;
        end
    end else begin
        acc_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        acc_we0 = 1'b1;
    end else begin
        acc_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        acc_we1 = 1'b1;
    end else begin
        acc_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (tmp_reg_285 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_58;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_136_p3 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        d_i_TDATA_blk_n = d_i_TVALID_int_regslice;
    end else begin
        d_i_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_136_p3 == 1'd0)))) begin
        d_i_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        d_o_TDATA_blk_n = d_o_TREADY_int_regslice;
    end else begin
        d_o_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_o_TDATA_int_regslice = add_ln67_3_fu_272_p2;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d_o_TDATA_int_regslice = add_ln67_2_fu_255_p2;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d_o_TDATA_int_regslice = add_ln67_1_fu_231_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d_o_TDATA_int_regslice = add_ln67_fu_179_p2;
    end else begin
        d_o_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (tmp_reg_285 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        d_o_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln64_fu_164_p2 = (ap_sig_allocacmp_i_1 + 6'd4);

assign add_ln66_1_fu_224_p2 = ($signed(reg_124) + $signed(sext_ln66_1_fu_221_p1));

assign add_ln66_2_fu_248_p2 = ($signed(reg_120) + $signed(sext_ln66_2_fu_244_p1));

assign add_ln66_3_fu_265_p2 = ($signed(reg_124) + $signed(sext_ln66_3_fu_261_p1));

assign add_ln66_fu_214_p2 = ($signed(reg_120) + $signed(sext_ln66_fu_210_p1));

assign add_ln67_1_fu_231_p2 = ($signed(d_i_read_1_reg_310) + $signed(trunc_ln66_1_reg_316));

assign add_ln67_2_fu_255_p2 = ($signed(reg_116) + $signed(trunc_ln66_2_reg_336));

assign add_ln67_3_fu_272_p2 = ($signed(reg_116) + $signed(trunc_ln66_3_reg_341));

assign add_ln67_fu_179_p2 = ($signed(reg_116) + $signed(trunc_ln66_fu_175_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((d_i_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_136_p3 == 1'd0)) | ((d_o_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((d_i_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_136_p3 == 1'd0)) | ((d_o_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((d_i_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_136_p3 == 1'd0)) | ((d_o_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((regslice_both_d_o_U_apdone_blk == 1'b1) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))) | ((d_o_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((regslice_both_d_o_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state2_io) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))) | ((d_o_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((regslice_both_d_o_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state2_io) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))) | ((d_o_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b1 == ap_condition_exit_pp0_iter0_stage1) & (regslice_both_d_o_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((d_i_TVALID_int_regslice == 1'b0) & (tmp_fu_136_p3 == 1'd0));
end

always @ (*) begin
    ap_block_state2_io = ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((regslice_both_d_o_U_apdone_blk == 1'b1) | ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_io = ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_io = ((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((tmp_reg_285 == 1'd0) & (d_o_TREADY_int_regslice == 1'b0)) | ((d_i_TVALID_int_regslice == 1'b0) & (tmp_reg_285 == 1'd0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (d_o_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state6_pp0_stage1_iter1 = (d_o_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_condition_167 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign d_i_TREADY = regslice_both_d_i_U_ack_in;

assign d_o_TVALID = regslice_both_d_o_U_vld_out;

assign rem_1_fu_153_p2 = (rem_fu_144_p1 | 3'd1);

assign rem_2_fu_190_p2 = (rem_reg_289 | 3'd2);

assign rem_3_fu_200_p2 = (rem_reg_289 | 3'd3);

assign rem_fu_144_p1 = ap_sig_allocacmp_i_1[2:0];

assign sext_ln66_1_fu_221_p1 = d_i_read_1_reg_310;

assign sext_ln66_2_fu_244_p1 = reg_116;

assign sext_ln66_3_fu_261_p0 = d_i_TDATA_int_regslice;

assign sext_ln66_3_fu_261_p1 = sext_ln66_3_fu_261_p0;

assign sext_ln66_fu_210_p1 = reg_116;

assign tmp_fu_136_p3 = ap_sig_allocacmp_i_1[32'd5];

assign trunc_ln66_1_fu_186_p1 = acc_q0[15:0];

assign trunc_ln66_2_fu_236_p1 = acc_q1[15:0];

assign trunc_ln66_3_fu_240_p1 = acc_q0[15:0];

assign trunc_ln66_fu_175_p1 = acc_q1[15:0];

assign zext_ln66_1_fu_159_p1 = rem_1_fu_153_p2;

assign zext_ln66_2_fu_195_p1 = rem_2_fu_190_p2;

assign zext_ln66_3_fu_205_p1 = rem_3_fu_200_p2;

assign zext_ln66_fu_148_p1 = rem_fu_144_p1;

always @ (posedge ap_clk) begin
    acc_addr_1_reg_300[0] <= 1'b1;
    acc_addr_2_reg_321[1] <= 1'b1;
    acc_addr_3_reg_326[1:0] <= 2'b11;
end

endmodule //axi_interfaces
