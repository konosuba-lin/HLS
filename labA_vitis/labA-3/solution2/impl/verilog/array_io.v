// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.029313,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1298,HLS_SYN_LUT=2287,HLS_VERSION=2022_1}" *)

module array_io (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_0_address0,
        d_o_0_ce0,
        d_o_0_we0,
        d_o_0_d0,
        d_o_1_address0,
        d_o_1_ce0,
        d_o_1_we0,
        d_o_1_d0,
        d_o_2_address0,
        d_o_2_ce0,
        d_o_2_we0,
        d_o_2_d0,
        d_o_3_address0,
        d_o_3_ce0,
        d_o_3_we0,
        d_o_3_d0,
        d_i_0_address0,
        d_i_0_ce0,
        d_i_0_q0,
        d_i_1_address0,
        d_i_1_ce0,
        d_i_1_q0,
        d_i_2_address0,
        d_i_2_ce0,
        d_i_2_q0,
        d_i_3_address0,
        d_i_3_ce0,
        d_i_3_q0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] d_o_0_address0;
output   d_o_0_ce0;
output   d_o_0_we0;
output  [15:0] d_o_0_d0;
output  [2:0] d_o_1_address0;
output   d_o_1_ce0;
output   d_o_1_we0;
output  [15:0] d_o_1_d0;
output  [2:0] d_o_2_address0;
output   d_o_2_ce0;
output   d_o_2_we0;
output  [15:0] d_o_2_d0;
output  [2:0] d_o_3_address0;
output   d_o_3_ce0;
output   d_o_3_we0;
output  [15:0] d_o_3_d0;
output  [2:0] d_i_0_address0;
output   d_i_0_ce0;
input  [15:0] d_i_0_q0;
output  [2:0] d_i_1_address0;
output   d_i_1_ce0;
input  [15:0] d_i_1_q0;
output  [2:0] d_i_2_address0;
output   d_i_2_ce0;
input  [15:0] d_i_2_q0;
output  [2:0] d_i_3_address0;
output   d_i_3_ce0;
input  [15:0] d_i_3_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] d_o_0_address0;
reg d_o_0_ce0;
reg d_o_0_we0;
reg[15:0] d_o_0_d0;
reg[2:0] d_o_1_address0;
reg d_o_1_ce0;
reg d_o_1_we0;
reg[15:0] d_o_1_d0;
reg[2:0] d_o_2_address0;
reg d_o_2_ce0;
reg d_o_2_we0;
reg[15:0] d_o_2_d0;
reg[2:0] d_o_3_address0;
reg d_o_3_ce0;
reg d_o_3_we0;
reg[15:0] d_o_3_d0;
reg[2:0] d_i_0_address0;
reg d_i_0_ce0;
reg[2:0] d_i_1_address0;
reg d_i_1_ce0;
reg[2:0] d_i_2_address0;
reg d_i_2_ce0;
reg[2:0] d_i_3_address0;
reg d_i_3_ce0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg  signed [15:0] d_i_0_load_reg_1332;
wire    ap_CS_fsm_state2;
reg  signed [15:0] d_i_1_load_reg_1338;
reg  signed [15:0] d_i_2_load_reg_1344;
reg  signed [15:0] d_i_3_load_reg_1350;
wire   [15:0] add_ln69_fu_696_p2;
reg   [15:0] add_ln69_reg_1379;
wire    ap_CS_fsm_state3;
wire   [15:0] add_ln69_1_fu_710_p2;
reg   [15:0] add_ln69_1_reg_1387;
wire   [15:0] add_ln69_2_fu_724_p2;
reg   [15:0] add_ln69_2_reg_1395;
wire   [15:0] add_ln69_3_fu_738_p2;
reg   [15:0] add_ln69_3_reg_1403;
reg  signed [15:0] d_i_0_load_1_reg_1408;
reg  signed [15:0] d_i_1_load_1_reg_1414;
reg  signed [15:0] d_i_2_load_1_reg_1420;
reg  signed [15:0] d_i_3_load_1_reg_1426;
wire   [15:0] add_ln69_4_fu_752_p2;
reg   [15:0] add_ln69_4_reg_1455;
wire    ap_CS_fsm_state4;
wire   [15:0] add_ln69_5_fu_766_p2;
reg   [15:0] add_ln69_5_reg_1463;
wire   [15:0] add_ln69_6_fu_780_p2;
reg   [15:0] add_ln69_6_reg_1471;
wire   [15:0] add_ln69_7_fu_794_p2;
reg   [15:0] add_ln69_7_reg_1479;
reg  signed [15:0] d_i_0_load_2_reg_1484;
reg  signed [15:0] d_i_1_load_2_reg_1490;
reg  signed [15:0] d_i_2_load_2_reg_1496;
reg  signed [15:0] d_i_3_load_2_reg_1502;
wire   [15:0] add_ln69_8_fu_800_p2;
reg   [15:0] add_ln69_8_reg_1528;
wire    ap_CS_fsm_state5;
wire   [15:0] add_ln69_9_fu_805_p2;
reg   [15:0] add_ln69_9_reg_1533;
wire   [15:0] add_ln69_10_fu_810_p2;
reg   [15:0] add_ln69_10_reg_1538;
wire   [15:0] add_ln69_11_fu_815_p2;
reg   [15:0] add_ln69_11_reg_1543;
reg  signed [15:0] d_i_0_load_3_reg_1548;
reg  signed [15:0] d_i_1_load_3_reg_1554;
reg  signed [15:0] d_i_2_load_3_reg_1560;
reg  signed [15:0] d_i_3_load_3_reg_1566;
wire   [15:0] add_ln69_12_fu_820_p2;
reg   [15:0] add_ln69_12_reg_1592;
wire    ap_CS_fsm_state6;
wire   [15:0] add_ln69_13_fu_825_p2;
reg   [15:0] add_ln69_13_reg_1597;
wire   [15:0] add_ln69_14_fu_830_p2;
reg   [15:0] add_ln69_14_reg_1602;
wire   [15:0] add_ln69_15_fu_835_p2;
reg   [15:0] add_ln69_15_reg_1607;
reg  signed [15:0] d_i_0_load_4_reg_1612;
reg  signed [15:0] d_i_1_load_4_reg_1618;
reg  signed [15:0] d_i_2_load_4_reg_1624;
reg  signed [15:0] d_i_3_load_4_reg_1630;
wire   [15:0] add_ln69_16_fu_840_p2;
reg   [15:0] add_ln69_16_reg_1656;
wire    ap_CS_fsm_state7;
wire   [15:0] add_ln69_17_fu_845_p2;
reg   [15:0] add_ln69_17_reg_1661;
wire   [15:0] add_ln69_18_fu_850_p2;
reg   [15:0] add_ln69_18_reg_1666;
wire   [15:0] add_ln69_19_fu_855_p2;
reg   [15:0] add_ln69_19_reg_1671;
reg  signed [15:0] d_i_0_load_5_reg_1676;
reg  signed [15:0] d_i_1_load_5_reg_1682;
reg  signed [15:0] d_i_2_load_5_reg_1688;
reg  signed [15:0] d_i_3_load_5_reg_1694;
wire   [15:0] add_ln69_20_fu_872_p2;
reg   [15:0] add_ln69_20_reg_1720;
wire    ap_CS_fsm_state8;
wire   [15:0] add_ln69_21_fu_877_p2;
reg   [15:0] add_ln69_21_reg_1725;
wire   [15:0] add_ln69_22_fu_882_p2;
reg   [15:0] add_ln69_22_reg_1730;
wire   [15:0] add_ln69_23_fu_887_p2;
reg   [15:0] add_ln69_23_reg_1735;
wire   [16:0] add_ln67_1_fu_896_p2;
reg   [16:0] add_ln67_1_reg_1740;
wire   [15:0] add_ln69_24_fu_902_p2;
reg   [15:0] add_ln69_24_reg_1745;
wire   [16:0] add_ln67_5_fu_911_p2;
reg   [16:0] add_ln67_5_reg_1750;
wire   [15:0] add_ln69_25_fu_917_p2;
reg   [15:0] add_ln69_25_reg_1755;
wire   [16:0] add_ln67_9_fu_926_p2;
reg   [16:0] add_ln67_9_reg_1760;
wire   [15:0] add_ln69_26_fu_932_p2;
reg   [15:0] add_ln69_26_reg_1765;
wire   [16:0] add_ln67_13_fu_941_p2;
reg   [16:0] add_ln67_13_reg_1770;
wire   [15:0] add_ln69_27_fu_947_p2;
reg   [15:0] add_ln69_27_reg_1775;
wire   [16:0] add_ln67_17_fu_1112_p2;
reg   [16:0] add_ln67_17_reg_1800;
wire    ap_CS_fsm_state9;
wire   [15:0] add_ln69_28_fu_1118_p2;
reg   [15:0] add_ln69_28_reg_1805;
wire   [16:0] add_ln67_21_fu_1127_p2;
reg   [16:0] add_ln67_21_reg_1810;
wire   [15:0] add_ln69_29_fu_1133_p2;
reg   [15:0] add_ln69_29_reg_1815;
wire   [16:0] add_ln67_25_fu_1142_p2;
reg   [16:0] add_ln67_25_reg_1820;
wire   [15:0] add_ln69_30_fu_1148_p2;
reg   [15:0] add_ln69_30_reg_1825;
wire   [16:0] add_ln67_29_fu_1157_p2;
reg   [16:0] add_ln67_29_reg_1830;
wire   [15:0] add_ln69_31_fu_1163_p2;
reg   [15:0] add_ln69_31_reg_1835;
wire    ap_CS_fsm_state10;
wire   [31:0] temp_fu_1006_p2;
wire   [31:0] temp_1_fu_1036_p2;
wire   [31:0] temp_2_fu_1066_p2;
wire   [31:0] temp_3_fu_1096_p2;
wire   [31:0] temp_4_fu_1210_p2;
wire   [31:0] temp_5_fu_1240_p2;
wire   [31:0] temp_6_fu_1270_p2;
wire   [31:0] temp_7_fu_1300_p2;
wire   [15:0] trunc_ln67_fu_692_p1;
wire   [15:0] trunc_ln67_1_fu_706_p1;
wire   [15:0] trunc_ln67_2_fu_720_p1;
wire   [15:0] trunc_ln67_3_fu_734_p1;
wire   [15:0] trunc_ln67_4_fu_748_p1;
wire   [15:0] trunc_ln67_5_fu_762_p1;
wire   [15:0] trunc_ln67_6_fu_776_p1;
wire   [15:0] trunc_ln67_7_fu_790_p1;
wire  signed [15:0] sext_ln67_8_fu_892_p0;
wire  signed [16:0] sext_ln69_8_fu_860_p1;
wire  signed [16:0] sext_ln67_8_fu_892_p1;
wire  signed [15:0] add_ln69_24_fu_902_p0;
wire  signed [15:0] sext_ln67_11_fu_907_p0;
wire  signed [16:0] sext_ln69_9_fu_863_p1;
wire  signed [16:0] sext_ln67_11_fu_907_p1;
wire  signed [15:0] add_ln69_25_fu_917_p0;
wire  signed [15:0] sext_ln67_14_fu_922_p0;
wire  signed [16:0] sext_ln69_10_fu_866_p1;
wire  signed [16:0] sext_ln67_14_fu_922_p1;
wire  signed [15:0] add_ln69_26_fu_932_p0;
wire  signed [15:0] sext_ln67_17_fu_937_p0;
wire  signed [16:0] sext_ln69_11_fu_869_p1;
wire  signed [16:0] sext_ln67_17_fu_937_p1;
wire  signed [15:0] add_ln69_27_fu_947_p0;
wire  signed [31:0] sext_ln67_fu_952_p1;
wire  signed [17:0] sext_ln67_9_fu_993_p1;
wire  signed [17:0] sext_ln69_fu_964_p1;
wire   [17:0] add_ln67_2_fu_996_p2;
wire  signed [31:0] sext_ln67_10_fu_1002_p1;
wire   [31:0] add_ln67_fu_988_p2;
wire  signed [31:0] sext_ln67_1_fu_955_p1;
wire  signed [17:0] sext_ln67_12_fu_1023_p1;
wire  signed [17:0] sext_ln69_1_fu_967_p1;
wire   [17:0] add_ln67_6_fu_1026_p2;
wire  signed [31:0] sext_ln67_13_fu_1032_p1;
wire   [31:0] add_ln67_4_fu_1018_p2;
wire  signed [31:0] sext_ln67_2_fu_958_p1;
wire  signed [17:0] sext_ln67_15_fu_1053_p1;
wire  signed [17:0] sext_ln69_2_fu_970_p1;
wire   [17:0] add_ln67_10_fu_1056_p2;
wire  signed [31:0] sext_ln67_16_fu_1062_p1;
wire   [31:0] add_ln67_8_fu_1048_p2;
wire  signed [31:0] sext_ln67_3_fu_961_p1;
wire  signed [17:0] sext_ln67_18_fu_1083_p1;
wire  signed [17:0] sext_ln69_3_fu_973_p1;
wire   [17:0] add_ln67_14_fu_1086_p2;
wire  signed [31:0] sext_ln67_19_fu_1092_p1;
wire   [31:0] add_ln67_12_fu_1078_p2;
wire  signed [15:0] sext_ln67_20_fu_1108_p0;
wire  signed [16:0] sext_ln69_12_fu_976_p1;
wire  signed [16:0] sext_ln67_20_fu_1108_p1;
wire  signed [15:0] add_ln69_28_fu_1118_p0;
wire  signed [15:0] sext_ln67_23_fu_1123_p0;
wire  signed [16:0] sext_ln69_13_fu_979_p1;
wire  signed [16:0] sext_ln67_23_fu_1123_p1;
wire  signed [15:0] add_ln69_29_fu_1133_p0;
wire  signed [15:0] sext_ln67_26_fu_1138_p0;
wire  signed [16:0] sext_ln69_14_fu_982_p1;
wire  signed [16:0] sext_ln67_26_fu_1138_p1;
wire  signed [15:0] add_ln69_30_fu_1148_p0;
wire  signed [15:0] sext_ln67_29_fu_1153_p0;
wire  signed [16:0] sext_ln69_15_fu_985_p1;
wire  signed [16:0] sext_ln67_29_fu_1153_p1;
wire  signed [15:0] add_ln69_31_fu_1163_p0;
wire  signed [31:0] sext_ln67_4_fu_1168_p1;
wire  signed [17:0] sext_ln67_21_fu_1197_p1;
wire  signed [17:0] sext_ln69_4_fu_1180_p1;
wire   [17:0] add_ln67_18_fu_1200_p2;
wire  signed [31:0] sext_ln67_22_fu_1206_p1;
wire   [31:0] add_ln67_16_fu_1192_p2;
wire  signed [31:0] sext_ln67_5_fu_1171_p1;
wire  signed [17:0] sext_ln67_24_fu_1227_p1;
wire  signed [17:0] sext_ln69_5_fu_1183_p1;
wire   [17:0] add_ln67_22_fu_1230_p2;
wire  signed [31:0] sext_ln67_25_fu_1236_p1;
wire   [31:0] add_ln67_20_fu_1222_p2;
wire  signed [31:0] sext_ln67_6_fu_1174_p1;
wire  signed [17:0] sext_ln67_27_fu_1257_p1;
wire  signed [17:0] sext_ln69_6_fu_1186_p1;
wire   [17:0] add_ln67_26_fu_1260_p2;
wire  signed [31:0] sext_ln67_28_fu_1266_p1;
wire   [31:0] add_ln67_24_fu_1252_p2;
wire  signed [31:0] sext_ln67_7_fu_1177_p1;
wire  signed [17:0] sext_ln67_30_fu_1287_p1;
wire  signed [17:0] sext_ln69_7_fu_1189_p1;
wire   [17:0] add_ln67_30_fu_1290_p2;
wire  signed [31:0] sext_ln67_31_fu_1296_p1;
wire   [31:0] add_ln67_28_fu_1282_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        acc_0 <= temp_fu_1006_p2;
        acc_1 <= temp_1_fu_1036_p2;
        acc_2 <= temp_2_fu_1066_p2;
        acc_3 <= temp_3_fu_1096_p2;
        add_ln67_17_reg_1800 <= add_ln67_17_fu_1112_p2;
        add_ln67_21_reg_1810 <= add_ln67_21_fu_1127_p2;
        add_ln67_25_reg_1820 <= add_ln67_25_fu_1142_p2;
        add_ln67_29_reg_1830 <= add_ln67_29_fu_1157_p2;
        add_ln69_28_reg_1805 <= add_ln69_28_fu_1118_p2;
        add_ln69_29_reg_1815 <= add_ln69_29_fu_1133_p2;
        add_ln69_30_reg_1825 <= add_ln69_30_fu_1148_p2;
        add_ln69_31_reg_1835 <= add_ln69_31_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        acc_4 <= temp_4_fu_1210_p2;
        acc_5 <= temp_5_fu_1240_p2;
        acc_6 <= temp_6_fu_1270_p2;
        acc_7 <= temp_7_fu_1300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln67_13_reg_1770 <= add_ln67_13_fu_941_p2;
        add_ln67_1_reg_1740 <= add_ln67_1_fu_896_p2;
        add_ln67_5_reg_1750 <= add_ln67_5_fu_911_p2;
        add_ln67_9_reg_1760 <= add_ln67_9_fu_926_p2;
        add_ln69_20_reg_1720 <= add_ln69_20_fu_872_p2;
        add_ln69_21_reg_1725 <= add_ln69_21_fu_877_p2;
        add_ln69_22_reg_1730 <= add_ln69_22_fu_882_p2;
        add_ln69_23_reg_1735 <= add_ln69_23_fu_887_p2;
        add_ln69_24_reg_1745 <= add_ln69_24_fu_902_p2;
        add_ln69_25_reg_1755 <= add_ln69_25_fu_917_p2;
        add_ln69_26_reg_1765 <= add_ln69_26_fu_932_p2;
        add_ln69_27_reg_1775 <= add_ln69_27_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln69_10_reg_1538 <= add_ln69_10_fu_810_p2;
        add_ln69_11_reg_1543 <= add_ln69_11_fu_815_p2;
        add_ln69_8_reg_1528 <= add_ln69_8_fu_800_p2;
        add_ln69_9_reg_1533 <= add_ln69_9_fu_805_p2;
        d_i_0_load_3_reg_1548 <= d_i_0_q0;
        d_i_1_load_3_reg_1554 <= d_i_1_q0;
        d_i_2_load_3_reg_1560 <= d_i_2_q0;
        d_i_3_load_3_reg_1566 <= d_i_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln69_12_reg_1592 <= add_ln69_12_fu_820_p2;
        add_ln69_13_reg_1597 <= add_ln69_13_fu_825_p2;
        add_ln69_14_reg_1602 <= add_ln69_14_fu_830_p2;
        add_ln69_15_reg_1607 <= add_ln69_15_fu_835_p2;
        d_i_0_load_4_reg_1612 <= d_i_0_q0;
        d_i_1_load_4_reg_1618 <= d_i_1_q0;
        d_i_2_load_4_reg_1624 <= d_i_2_q0;
        d_i_3_load_4_reg_1630 <= d_i_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln69_16_reg_1656 <= add_ln69_16_fu_840_p2;
        add_ln69_17_reg_1661 <= add_ln69_17_fu_845_p2;
        add_ln69_18_reg_1666 <= add_ln69_18_fu_850_p2;
        add_ln69_19_reg_1671 <= add_ln69_19_fu_855_p2;
        d_i_0_load_5_reg_1676 <= d_i_0_q0;
        d_i_1_load_5_reg_1682 <= d_i_1_q0;
        d_i_2_load_5_reg_1688 <= d_i_2_q0;
        d_i_3_load_5_reg_1694 <= d_i_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln69_1_reg_1387 <= add_ln69_1_fu_710_p2;
        add_ln69_2_reg_1395 <= add_ln69_2_fu_724_p2;
        add_ln69_3_reg_1403 <= add_ln69_3_fu_738_p2;
        add_ln69_reg_1379 <= add_ln69_fu_696_p2;
        d_i_0_load_1_reg_1408 <= d_i_0_q0;
        d_i_1_load_1_reg_1414 <= d_i_1_q0;
        d_i_2_load_1_reg_1420 <= d_i_2_q0;
        d_i_3_load_1_reg_1426 <= d_i_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln69_4_reg_1455 <= add_ln69_4_fu_752_p2;
        add_ln69_5_reg_1463 <= add_ln69_5_fu_766_p2;
        add_ln69_6_reg_1471 <= add_ln69_6_fu_780_p2;
        add_ln69_7_reg_1479 <= add_ln69_7_fu_794_p2;
        d_i_0_load_2_reg_1484 <= d_i_0_q0;
        d_i_1_load_2_reg_1490 <= d_i_1_q0;
        d_i_2_load_2_reg_1496 <= d_i_2_q0;
        d_i_3_load_2_reg_1502 <= d_i_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_0_load_reg_1332 <= d_i_0_q0;
        d_i_1_load_reg_1338 <= d_i_1_q0;
        d_i_2_load_reg_1344 <= d_i_2_q0;
        d_i_3_load_reg_1350 <= d_i_3_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_0_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_0_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_0_address0 = 64'd0;
    end else begin
        d_i_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_0_ce0 = 1'b1;
    end else begin
        d_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_1_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_1_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_1_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_1_address0 = 64'd0;
    end else begin
        d_i_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_1_ce0 = 1'b1;
    end else begin
        d_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_2_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_2_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_2_address0 = 64'd0;
    end else begin
        d_i_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_2_ce0 = 1'b1;
    end else begin
        d_i_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_3_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_3_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_3_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_3_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_3_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_3_address0 = 64'd0;
    end else begin
        d_i_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_3_ce0 = 1'b1;
    end else begin
        d_i_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_0_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_0_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_0_address0 = 64'd0;
    end else begin
        d_o_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_0_ce0 = 1'b1;
    end else begin
        d_o_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_0_d0 = add_ln69_28_reg_1805;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_0_d0 = add_ln69_24_reg_1745;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_0_d0 = add_ln69_20_fu_872_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_0_d0 = add_ln69_16_fu_840_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_0_d0 = add_ln69_12_fu_820_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_0_d0 = add_ln69_8_fu_800_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_0_d0 = add_ln69_4_fu_752_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_0_d0 = add_ln69_fu_696_p2;
    end else begin
        d_o_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_0_we0 = 1'b1;
    end else begin
        d_o_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_1_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_1_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_1_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_1_address0 = 64'd0;
    end else begin
        d_o_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_1_ce0 = 1'b1;
    end else begin
        d_o_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_1_d0 = add_ln69_29_reg_1815;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_1_d0 = add_ln69_25_reg_1755;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_1_d0 = add_ln69_21_fu_877_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_1_d0 = add_ln69_17_fu_845_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_1_d0 = add_ln69_13_fu_825_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_1_d0 = add_ln69_9_fu_805_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_1_d0 = add_ln69_5_fu_766_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_1_d0 = add_ln69_1_fu_710_p2;
    end else begin
        d_o_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_1_we0 = 1'b1;
    end else begin
        d_o_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_2_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_2_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_2_address0 = 64'd0;
    end else begin
        d_o_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_2_ce0 = 1'b1;
    end else begin
        d_o_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_2_d0 = add_ln69_30_reg_1825;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_2_d0 = add_ln69_26_reg_1765;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_2_d0 = add_ln69_22_fu_882_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_2_d0 = add_ln69_18_fu_850_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_2_d0 = add_ln69_14_fu_830_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_2_d0 = add_ln69_10_fu_810_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_2_d0 = add_ln69_6_fu_780_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_2_d0 = add_ln69_2_fu_724_p2;
    end else begin
        d_o_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_2_we0 = 1'b1;
    end else begin
        d_o_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_3_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_3_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_3_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_3_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_3_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_3_address0 = 64'd0;
    end else begin
        d_o_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_3_ce0 = 1'b1;
    end else begin
        d_o_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_3_d0 = add_ln69_31_reg_1835;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_3_d0 = add_ln69_27_reg_1775;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_3_d0 = add_ln69_23_fu_887_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_3_d0 = add_ln69_19_fu_855_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_3_d0 = add_ln69_15_fu_835_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_3_d0 = add_ln69_11_fu_815_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_3_d0 = add_ln69_7_fu_794_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_3_d0 = add_ln69_3_fu_738_p2;
    end else begin
        d_o_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        d_o_3_we0 = 1'b1;
    end else begin
        d_o_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_10_fu_1056_p2 = ($signed(sext_ln67_15_fu_1053_p1) + $signed(sext_ln69_2_fu_970_p1));

assign add_ln67_12_fu_1078_p2 = ($signed(acc_3) + $signed(sext_ln67_3_fu_961_p1));

assign add_ln67_13_fu_941_p2 = ($signed(sext_ln69_11_fu_869_p1) + $signed(sext_ln67_17_fu_937_p1));

assign add_ln67_14_fu_1086_p2 = ($signed(sext_ln67_18_fu_1083_p1) + $signed(sext_ln69_3_fu_973_p1));

assign add_ln67_16_fu_1192_p2 = ($signed(acc_4) + $signed(sext_ln67_4_fu_1168_p1));

assign add_ln67_17_fu_1112_p2 = ($signed(sext_ln69_12_fu_976_p1) + $signed(sext_ln67_20_fu_1108_p1));

assign add_ln67_18_fu_1200_p2 = ($signed(sext_ln67_21_fu_1197_p1) + $signed(sext_ln69_4_fu_1180_p1));

assign add_ln67_1_fu_896_p2 = ($signed(sext_ln69_8_fu_860_p1) + $signed(sext_ln67_8_fu_892_p1));

assign add_ln67_20_fu_1222_p2 = ($signed(acc_5) + $signed(sext_ln67_5_fu_1171_p1));

assign add_ln67_21_fu_1127_p2 = ($signed(sext_ln69_13_fu_979_p1) + $signed(sext_ln67_23_fu_1123_p1));

assign add_ln67_22_fu_1230_p2 = ($signed(sext_ln67_24_fu_1227_p1) + $signed(sext_ln69_5_fu_1183_p1));

assign add_ln67_24_fu_1252_p2 = ($signed(acc_6) + $signed(sext_ln67_6_fu_1174_p1));

assign add_ln67_25_fu_1142_p2 = ($signed(sext_ln69_14_fu_982_p1) + $signed(sext_ln67_26_fu_1138_p1));

assign add_ln67_26_fu_1260_p2 = ($signed(sext_ln67_27_fu_1257_p1) + $signed(sext_ln69_6_fu_1186_p1));

assign add_ln67_28_fu_1282_p2 = ($signed(acc_7) + $signed(sext_ln67_7_fu_1177_p1));

assign add_ln67_29_fu_1157_p2 = ($signed(sext_ln69_15_fu_985_p1) + $signed(sext_ln67_29_fu_1153_p1));

assign add_ln67_2_fu_996_p2 = ($signed(sext_ln67_9_fu_993_p1) + $signed(sext_ln69_fu_964_p1));

assign add_ln67_30_fu_1290_p2 = ($signed(sext_ln67_30_fu_1287_p1) + $signed(sext_ln69_7_fu_1189_p1));

assign add_ln67_4_fu_1018_p2 = ($signed(acc_1) + $signed(sext_ln67_1_fu_955_p1));

assign add_ln67_5_fu_911_p2 = ($signed(sext_ln69_9_fu_863_p1) + $signed(sext_ln67_11_fu_907_p1));

assign add_ln67_6_fu_1026_p2 = ($signed(sext_ln67_12_fu_1023_p1) + $signed(sext_ln69_1_fu_967_p1));

assign add_ln67_8_fu_1048_p2 = ($signed(acc_2) + $signed(sext_ln67_2_fu_958_p1));

assign add_ln67_9_fu_926_p2 = ($signed(sext_ln69_10_fu_866_p1) + $signed(sext_ln67_14_fu_922_p1));

assign add_ln67_fu_988_p2 = ($signed(acc_0) + $signed(sext_ln67_fu_952_p1));

assign add_ln69_10_fu_810_p2 = ($signed(d_i_2_load_2_reg_1496) + $signed(add_ln69_2_reg_1395));

assign add_ln69_11_fu_815_p2 = ($signed(d_i_3_load_2_reg_1502) + $signed(add_ln69_3_reg_1403));

assign add_ln69_12_fu_820_p2 = ($signed(d_i_0_load_3_reg_1548) + $signed(add_ln69_4_reg_1455));

assign add_ln69_13_fu_825_p2 = ($signed(d_i_1_load_3_reg_1554) + $signed(add_ln69_5_reg_1463));

assign add_ln69_14_fu_830_p2 = ($signed(d_i_2_load_3_reg_1560) + $signed(add_ln69_6_reg_1471));

assign add_ln69_15_fu_835_p2 = ($signed(d_i_3_load_3_reg_1566) + $signed(add_ln69_7_reg_1479));

assign add_ln69_16_fu_840_p2 = ($signed(d_i_0_load_4_reg_1612) + $signed(add_ln69_8_reg_1528));

assign add_ln69_17_fu_845_p2 = ($signed(d_i_1_load_4_reg_1618) + $signed(add_ln69_9_reg_1533));

assign add_ln69_18_fu_850_p2 = ($signed(d_i_2_load_4_reg_1624) + $signed(add_ln69_10_reg_1538));

assign add_ln69_19_fu_855_p2 = ($signed(d_i_3_load_4_reg_1630) + $signed(add_ln69_11_reg_1543));

assign add_ln69_1_fu_710_p2 = ($signed(d_i_1_load_reg_1338) + $signed(trunc_ln67_1_fu_706_p1));

assign add_ln69_20_fu_872_p2 = ($signed(d_i_0_load_5_reg_1676) + $signed(add_ln69_12_reg_1592));

assign add_ln69_21_fu_877_p2 = ($signed(d_i_1_load_5_reg_1682) + $signed(add_ln69_13_reg_1597));

assign add_ln69_22_fu_882_p2 = ($signed(d_i_2_load_5_reg_1688) + $signed(add_ln69_14_reg_1602));

assign add_ln69_23_fu_887_p2 = ($signed(d_i_3_load_5_reg_1694) + $signed(add_ln69_15_reg_1607));

assign add_ln69_24_fu_902_p0 = d_i_0_q0;

assign add_ln69_24_fu_902_p2 = ($signed(add_ln69_24_fu_902_p0) + $signed(add_ln69_16_reg_1656));

assign add_ln69_25_fu_917_p0 = d_i_1_q0;

assign add_ln69_25_fu_917_p2 = ($signed(add_ln69_25_fu_917_p0) + $signed(add_ln69_17_reg_1661));

assign add_ln69_26_fu_932_p0 = d_i_2_q0;

assign add_ln69_26_fu_932_p2 = ($signed(add_ln69_26_fu_932_p0) + $signed(add_ln69_18_reg_1666));

assign add_ln69_27_fu_947_p0 = d_i_3_q0;

assign add_ln69_27_fu_947_p2 = ($signed(add_ln69_27_fu_947_p0) + $signed(add_ln69_19_reg_1671));

assign add_ln69_28_fu_1118_p0 = d_i_0_q0;

assign add_ln69_28_fu_1118_p2 = ($signed(add_ln69_28_fu_1118_p0) + $signed(add_ln69_20_reg_1720));

assign add_ln69_29_fu_1133_p0 = d_i_1_q0;

assign add_ln69_29_fu_1133_p2 = ($signed(add_ln69_29_fu_1133_p0) + $signed(add_ln69_21_reg_1725));

assign add_ln69_2_fu_724_p2 = ($signed(d_i_2_load_reg_1344) + $signed(trunc_ln67_2_fu_720_p1));

assign add_ln69_30_fu_1148_p0 = d_i_2_q0;

assign add_ln69_30_fu_1148_p2 = ($signed(add_ln69_30_fu_1148_p0) + $signed(add_ln69_22_reg_1730));

assign add_ln69_31_fu_1163_p0 = d_i_3_q0;

assign add_ln69_31_fu_1163_p2 = ($signed(add_ln69_31_fu_1163_p0) + $signed(add_ln69_23_reg_1735));

assign add_ln69_3_fu_738_p2 = ($signed(d_i_3_load_reg_1350) + $signed(trunc_ln67_3_fu_734_p1));

assign add_ln69_4_fu_752_p2 = ($signed(d_i_0_load_1_reg_1408) + $signed(trunc_ln67_4_fu_748_p1));

assign add_ln69_5_fu_766_p2 = ($signed(d_i_1_load_1_reg_1414) + $signed(trunc_ln67_5_fu_762_p1));

assign add_ln69_6_fu_780_p2 = ($signed(d_i_2_load_1_reg_1420) + $signed(trunc_ln67_6_fu_776_p1));

assign add_ln69_7_fu_794_p2 = ($signed(d_i_3_load_1_reg_1426) + $signed(trunc_ln67_7_fu_790_p1));

assign add_ln69_8_fu_800_p2 = ($signed(d_i_0_load_2_reg_1484) + $signed(add_ln69_reg_1379));

assign add_ln69_9_fu_805_p2 = ($signed(d_i_1_load_2_reg_1490) + $signed(add_ln69_1_reg_1387));

assign add_ln69_fu_696_p2 = ($signed(d_i_0_load_reg_1332) + $signed(trunc_ln67_fu_692_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign sext_ln67_10_fu_1002_p1 = $signed(add_ln67_2_fu_996_p2);

assign sext_ln67_11_fu_907_p0 = d_i_1_q0;

assign sext_ln67_11_fu_907_p1 = sext_ln67_11_fu_907_p0;

assign sext_ln67_12_fu_1023_p1 = $signed(add_ln67_5_reg_1750);

assign sext_ln67_13_fu_1032_p1 = $signed(add_ln67_6_fu_1026_p2);

assign sext_ln67_14_fu_922_p0 = d_i_2_q0;

assign sext_ln67_14_fu_922_p1 = sext_ln67_14_fu_922_p0;

assign sext_ln67_15_fu_1053_p1 = $signed(add_ln67_9_reg_1760);

assign sext_ln67_16_fu_1062_p1 = $signed(add_ln67_10_fu_1056_p2);

assign sext_ln67_17_fu_937_p0 = d_i_3_q0;

assign sext_ln67_17_fu_937_p1 = sext_ln67_17_fu_937_p0;

assign sext_ln67_18_fu_1083_p1 = $signed(add_ln67_13_reg_1770);

assign sext_ln67_19_fu_1092_p1 = $signed(add_ln67_14_fu_1086_p2);

assign sext_ln67_1_fu_955_p1 = d_i_1_load_reg_1338;

assign sext_ln67_20_fu_1108_p0 = d_i_0_q0;

assign sext_ln67_20_fu_1108_p1 = sext_ln67_20_fu_1108_p0;

assign sext_ln67_21_fu_1197_p1 = $signed(add_ln67_17_reg_1800);

assign sext_ln67_22_fu_1206_p1 = $signed(add_ln67_18_fu_1200_p2);

assign sext_ln67_23_fu_1123_p0 = d_i_1_q0;

assign sext_ln67_23_fu_1123_p1 = sext_ln67_23_fu_1123_p0;

assign sext_ln67_24_fu_1227_p1 = $signed(add_ln67_21_reg_1810);

assign sext_ln67_25_fu_1236_p1 = $signed(add_ln67_22_fu_1230_p2);

assign sext_ln67_26_fu_1138_p0 = d_i_2_q0;

assign sext_ln67_26_fu_1138_p1 = sext_ln67_26_fu_1138_p0;

assign sext_ln67_27_fu_1257_p1 = $signed(add_ln67_25_reg_1820);

assign sext_ln67_28_fu_1266_p1 = $signed(add_ln67_26_fu_1260_p2);

assign sext_ln67_29_fu_1153_p0 = d_i_3_q0;

assign sext_ln67_29_fu_1153_p1 = sext_ln67_29_fu_1153_p0;

assign sext_ln67_2_fu_958_p1 = d_i_2_load_reg_1344;

assign sext_ln67_30_fu_1287_p1 = $signed(add_ln67_29_reg_1830);

assign sext_ln67_31_fu_1296_p1 = $signed(add_ln67_30_fu_1290_p2);

assign sext_ln67_3_fu_961_p1 = d_i_3_load_reg_1350;

assign sext_ln67_4_fu_1168_p1 = d_i_0_load_1_reg_1408;

assign sext_ln67_5_fu_1171_p1 = d_i_1_load_1_reg_1414;

assign sext_ln67_6_fu_1174_p1 = d_i_2_load_1_reg_1420;

assign sext_ln67_7_fu_1177_p1 = d_i_3_load_1_reg_1426;

assign sext_ln67_8_fu_892_p0 = d_i_0_q0;

assign sext_ln67_8_fu_892_p1 = sext_ln67_8_fu_892_p0;

assign sext_ln67_9_fu_993_p1 = $signed(add_ln67_1_reg_1740);

assign sext_ln67_fu_952_p1 = d_i_0_load_reg_1332;

assign sext_ln69_10_fu_866_p1 = d_i_2_load_4_reg_1624;

assign sext_ln69_11_fu_869_p1 = d_i_3_load_4_reg_1630;

assign sext_ln69_12_fu_976_p1 = d_i_0_load_5_reg_1676;

assign sext_ln69_13_fu_979_p1 = d_i_1_load_5_reg_1682;

assign sext_ln69_14_fu_982_p1 = d_i_2_load_5_reg_1688;

assign sext_ln69_15_fu_985_p1 = d_i_3_load_5_reg_1694;

assign sext_ln69_1_fu_967_p1 = d_i_1_load_2_reg_1490;

assign sext_ln69_2_fu_970_p1 = d_i_2_load_2_reg_1496;

assign sext_ln69_3_fu_973_p1 = d_i_3_load_2_reg_1502;

assign sext_ln69_4_fu_1180_p1 = d_i_0_load_3_reg_1548;

assign sext_ln69_5_fu_1183_p1 = d_i_1_load_3_reg_1554;

assign sext_ln69_6_fu_1186_p1 = d_i_2_load_3_reg_1560;

assign sext_ln69_7_fu_1189_p1 = d_i_3_load_3_reg_1566;

assign sext_ln69_8_fu_860_p1 = d_i_0_load_4_reg_1612;

assign sext_ln69_9_fu_863_p1 = d_i_1_load_4_reg_1618;

assign sext_ln69_fu_964_p1 = d_i_0_load_2_reg_1484;

assign temp_1_fu_1036_p2 = ($signed(sext_ln67_13_fu_1032_p1) + $signed(add_ln67_4_fu_1018_p2));

assign temp_2_fu_1066_p2 = ($signed(sext_ln67_16_fu_1062_p1) + $signed(add_ln67_8_fu_1048_p2));

assign temp_3_fu_1096_p2 = ($signed(sext_ln67_19_fu_1092_p1) + $signed(add_ln67_12_fu_1078_p2));

assign temp_4_fu_1210_p2 = ($signed(sext_ln67_22_fu_1206_p1) + $signed(add_ln67_16_fu_1192_p2));

assign temp_5_fu_1240_p2 = ($signed(sext_ln67_25_fu_1236_p1) + $signed(add_ln67_20_fu_1222_p2));

assign temp_6_fu_1270_p2 = ($signed(sext_ln67_28_fu_1266_p1) + $signed(add_ln67_24_fu_1252_p2));

assign temp_7_fu_1300_p2 = ($signed(sext_ln67_31_fu_1296_p1) + $signed(add_ln67_28_fu_1282_p2));

assign temp_fu_1006_p2 = ($signed(sext_ln67_10_fu_1002_p1) + $signed(add_ln67_fu_988_p2));

assign trunc_ln67_1_fu_706_p1 = acc_1[15:0];

assign trunc_ln67_2_fu_720_p1 = acc_2[15:0];

assign trunc_ln67_3_fu_734_p1 = acc_3[15:0];

assign trunc_ln67_4_fu_748_p1 = acc_4[15:0];

assign trunc_ln67_5_fu_762_p1 = acc_5[15:0];

assign trunc_ln67_6_fu_776_p1 = acc_6[15:0];

assign trunc_ln67_7_fu_790_p1 = acc_7[15:0];

assign trunc_ln67_fu_692_p1 = acc_0[15:0];

endmodule //array_io
